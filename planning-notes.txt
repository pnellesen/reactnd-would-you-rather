Views/Components needed
===========================

<App.../>
    
    <LoginForm.../> (route: '/login')- displays if user has not logged in, even if user tries to enter a different url.
                    For starters just a dropdown with a list of users to select. Once user has logged in, this will be hidden.
    
    <ErrorPage .../> no topnav here if user hasn't logged in yet. 

    <TopNav.../> - obvious. Check rubric
    
    
    <Main.../> Main page/Home (route: '/')
        <Tab../>
            <QuestionList... (answered)/> ( takes a "type" prop for showing answered or unanswered polls?)
                <Question.../> ( )
        <Tab.../>
            <QuestionList... (unanswered)/> ( takes a "type" prop for showing answered or unanswered polls?)
                <Question.../> ( )
            

    <ViewQuestion.../> (route: '/question/:question_id')
            <Question.../>
    
    <Leaderboard.../> (route: '/leaderboard')
    
    <NewPoll.../> (route: '/add')


        


Which data should live in the store?
=======================================
authedUser (implies loggedin?)
user info
question info


Which componenets should access store via "connect()"? (these would be considered "containers" I think)
=========================================================================================================    
<App>
<LoginForm>
<Main>
<Leaderboard>
<NewPoll>

Actions:
========
handleLogin
    set authedUser in store
handleLogout
    remove authedUser from store

handleInitialData - "shared" action?
    get all questions and user info

handleAnswerQuestion - save here?



Reducers:
============

DO_LOGIN
    authedUser
DO_LOGOUT
    authedUser = ''

FETCH_QUESTIONS
    questions
FETCH_USERS
    users


Possible state/store objects:
==========================================

{
    authedUser


}

Other notes:
=====================

Free avatar icons: https://www.pdclipart.org/thumbnails.php?album=85





